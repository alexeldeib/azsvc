name: bootstrap soak test mgmt cluster

on:
    schedule:
        - cron: '0 */4 * * *'
    push:
        branches:
            - 'ace/dev'
        
jobs:
    bootstrap:
        name: bootstrap mgmt cluster
        runs-on: ubuntu-latest
        env:
            AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
            AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
            AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            SSH_KEY: ${{ secrets.SSH_KEY }}
            KUSTOMIZE_VERSION: v3.5.4
            FILE: cmd/bootstrap/config.yaml
        steps:
        - uses: actions/checkout@master
        - uses: docker://alexeldeib/azsvc-kustomize:latest
        - uses: docker://alexeldeib/azsvc-bootstrap:latest
        # - name: install kustomize
        #   run: |
        #     export PATH=$PATH:${HOME}/bin
        #     go env
        #     mkdir ${HOME}/bin
        #     mkdir ${HOME}/kustomize
        #     cd ${HOME}/kustomize
        #     go mod init tmp
        #     go get sigs.k8s.io/kustomize/kustomize/v3@${KUSTOMIZE_VERSION}
        #     cp $(go env GOPATH)/bin/kustomize ${HOME}/bin/kustomize
        #     cd ${HOME}
        #     rm -rf ${HOME}/kustomize
        #     kustomize
        # - name: install kustomize
        #   run: |
        #     export PATH=$PATH:$(go env GOPATH)/bin
        #     go env
        #     mkdir ${HOME}/kustomize
        #     cd ${HOME}/kustomize
        #     git clone https://github.com/kubernetes-sigs/kustomize .
        #     git checkout kustomize/${KUSTOMIZE_VERSION}
        #     cd kustomize
        #     go install .
        #     cd ${HOME}
        #     rm -rf ${HOME}/kustomize
        #     kustomize
        - name: bootstrap
          run: |
            export PATH=$PATH:${HOME}/bin
            go run ./cmd/bootstrap/bootstrap.go -f ./cmd/bootstrap/config.yaml --app ${AZURE_CLIENT_ID} --tenant ${AZURE_TENANT_ID} --key ${AZURE_CLIENT_SECRET}
            kustomize build ./config/flux | kubectl --kubeconfig ./kubeconfig apply -f -
            kubectl --kubeconfig ./kubeconfig create secret generic -n flux flux-git-deploy --dry-run=true --from-literal=identity="${SSH_KEY}" -o yaml | kubectl --kubeconfig ./kubeconfig apply -f -
